#include "camerathread.h"

CameraThread::CameraThread()
{
    m_isRun = true;
}

void CameraThread::run()
{
    // Local control variables
    HalconCpp::HTuple  hv_AcqHandle;

    //Image Acquisition 01: Code generated by Image Acquisition 01
    OpenFramegrabber("DirectShow", 1, 1, 0, 0, 0, 0, "default", 8, "rgb", -1, "false",
        "default", "[0] ", 0, -1, &hv_AcqHandle);

    //Image Acquisition 01: Do something

    while(m_isRun){
        GrabImageStart(hv_AcqHandle, -1);

        GrabImageAsync(&ho_Image, hv_AcqHandle, -1);

        emit cameraStarted();
        msleep(3);

        if(!m_isRun){
            //销毁线程
            this->quit();
            CloseFramegrabber(hv_AcqHandle);
        }
    }
}

void CameraThread::startThread()
{
    if(!this->isRunning())
    {
        this->start();
        this->m_isRun=true;
    }
}

void CameraThread::stopThread()
{
    if(this->isRunning())
    {
     this->quit();
     m_isRun = true;
    }
}


